/*
 * Weather Forecast API
 * This is the swagger definition of the weather forecast API. For more info contact sdimopoulos@irisweb.gr
 *
 * OpenAPI spec version: 1.0.0
 * Contact: sdimopoulos@irisweb.gr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeatherForecastApi);
  }
}(this, function(expect, WeatherForecastApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ForecastInfo', function() {
      beforeEach(function() {
        instance = new WeatherForecastApi.ForecastInfo();
      });

      it('should create an instance of ForecastInfo', function() {
        // TODO: update the code to test ForecastInfo
        expect(instance).to.be.a(WeatherForecastApi.ForecastInfo);
      });

      it('should have the property overall (base name: "overall")', function() {
        // TODO: update the code to test the property overall
        expect(instance).to.have.property('overall');
        // expect(instance.overall).to.be(expectedValueLiteral);
      });

      it('should have the property temperature (base name: "temperature")', function() {
        // TODO: update the code to test the property temperature
        expect(instance).to.have.property('temperature');
        // expect(instance.temperature).to.be(expectedValueLiteral);
      });

      it('should have the property humidity (base name: "humidity")', function() {
        // TODO: update the code to test the property humidity
        expect(instance).to.have.property('humidity');
        // expect(instance.humidity).to.be(expectedValueLiteral);
      });

      it('should have the property pressure (base name: "pressure")', function() {
        // TODO: update the code to test the property pressure
        expect(instance).to.have.property('pressure');
        // expect(instance.pressure).to.be(expectedValueLiteral);
      });

    });
  });

}));
